!function(e,n){"function"==typeof define&&define.amd?define([],n):"undefined"!=typeof module&&module.exports?module.exports=n():e.ReconnectingWebSocket=n()}(this,function(){function e(n,t,o){function c(e,n){var t=document.createEvent("CustomEvent");return t.initCustomEvent(e,!1,!1,n),t}var i={debug:!1,automaticOpen:!0,reconnectInterval:1e3,maxReconnectInterval:3e4,reconnectDecay:1.5,timeoutInterval:2e3,maxReconnectAttempts:null,binaryType:"blob"};o||(o={});for(var s in i)void 0!==o[s]?this[s]=o[s]:this[s]=i[s];this.url=n,this.reconnectAttempts=0,this.readyState=WebSocket.CONNECTING,this.protocol=null;var r,u=this,a=!1,l=!1,d=document.createElement("div");d.addEventListener("open",function(e){u.onopen(e)}),d.addEventListener("close",function(e){u.onclose(e)}),d.addEventListener("connecting",function(e){u.onconnecting(e)}),d.addEventListener("message",function(e){u.onmessage(e)}),d.addEventListener("error",function(e){u.onerror(e)}),this.addEventListener=d.addEventListener.bind(d),this.removeEventListener=d.removeEventListener.bind(d),this.dispatchEvent=d.dispatchEvent.bind(d),this.open=function(n){if(r=new WebSocket(u.url,t||[]),r.binaryType=this.binaryType,n){if(this.maxReconnectAttempts&&this.reconnectAttempts>this.maxReconnectAttempts)return}else d.dispatchEvent(c("connecting")),this.reconnectAttempts=0;(u.debug||e.debugAll)&&console&&console.debug("ReconnectingWebSocket","attempt-connect",u.url);var o=r,i=setTimeout(function(){(u.debug||e.debugAll)&&console&&console.debug("ReconnectingWebSocket","connection-timeout",u.url),l=!0,o.close(),l=!1},u.timeoutInterval);r.onopen=function(t){clearTimeout(i),(u.debug||e.debugAll)&&console&&console.debug("ReconnectingWebSocket","onopen",u.url),u.protocol=r.protocol,u.readyState=WebSocket.OPEN,u.reconnectAttempts=0;var o=c("open");o.isReconnect=n,n=!1,d.dispatchEvent(o)},r.onclose=function(t){if(clearTimeout(i),r=null,a)u.readyState=WebSocket.CLOSED,d.dispatchEvent(c("close"));else{u.readyState=WebSocket.CONNECTING;var o=c("connecting");o.code=t.code,o.reason=t.reason,o.wasClean=t.wasClean,d.dispatchEvent(o),n||l||((u.debug||e.debugAll)&&console&&console.debug("ReconnectingWebSocket","onclose",u.url),d.dispatchEvent(c("close")));var i=u.reconnectInterval*Math.pow(u.reconnectDecay,u.reconnectAttempts);setTimeout(function(){u.reconnectAttempts++,u.open(!0)},i>u.maxReconnectInterval?u.maxReconnectInterval:i)}},r.onmessage=function(n){(u.debug||e.debugAll)&&console&&console.debug("ReconnectingWebSocket","onmessage",u.url,n.data);var t=c("message");t.data=n.data,d.dispatchEvent(t)},r.onerror=function(n){(u.debug||e.debugAll)&&console&&console.debug("ReconnectingWebSocket","onerror",u.url,n),d.dispatchEvent(c("error"))}},1==this.automaticOpen&&this.open(!1),this.send=function(n){if(r)return(u.debug||e.debugAll)&&console&&console.debug("ReconnectingWebSocket","send",u.url,n),r.send(n);throw"INVALID_STATE_ERR : Pausing to reconnect websocket"},this.close=function(e,n){void 0===e&&(e=1e3),a=!0,r&&r.close(e,n)},this.refresh=function(){r&&r.close()}}if("WebSocket"in window)return e.prototype.onopen=function(e){},e.prototype.onclose=function(e){},e.prototype.onconnecting=function(e){},e.prototype.onmessage=function(e){},e.prototype.onerror=function(e){},e.debugAll=!1,e.CONNECTING=WebSocket.CONNECTING,e.OPEN=WebSocket.OPEN,e.CLOSING=WebSocket.CLOSING,e.CLOSED=WebSocket.CLOSED,e});